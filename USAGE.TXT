chdkptp supports console CLI, a GUI, and batch operation.

The gui is not currently very useful

=Command line=
The interface is selected by command line options
Usage: chdkptp [options]
Options:
  -g    start gui
  -i    start interactive cli
  -c    connect at startup
  -n    non-interactive - quit after processing command line options (default)
  -e    execute cli command, multiple allowed
  -h    help


=CLI=
CLI commands are available from the console, gui and the command line

The following CLI commands are available. () indicate short names for the commands
help (h,?)   [command]   : - help on [command] or all commands
#                        : - comment
exec (!)     <lua code>  : - execute local lua
quit (q)                 : - quit program
lua (l,.)    <lua code>  : - execute remote lua
getm                     : - get messages
putm         <msg string>: - send message
luar (=)     <lua code>  : - execute remote lua, wait for result
rmem         <address> [count]: -  read memory
list                     : - list devices
upload (u)   <local> [remote]: - upload a file to the camera
download (d) <remote> [local]: - download a file from the camera
version (ver)             : - print API versions
connect (c)  [-b<bus>] [-d<dev>] [-p<pid>] [-s<serial>] [model] : - connect to device
disconnect (dis)             : - disconnect from device
ls           [-l] [path] : - list files/directories on camera
reboot       [file]      : - reboot the camera

CLI notes
connect accepts optional arguments to select from multiple connected cameras.
All except -p are lua patterns

list displays a list of available devices, in the following format
<status><num><modelname> b=<bus> d=<device> v=<usb vendor> p=<usb pid> s=<serial number>
status has the following values
 * connected, and selected for CLI commands (con global variable)
 + connected outside of cli (e.g using lua via ! commands)
 blank: not connected

=Examples=
upload bin/diskboot.bin to A/diskboot.bin, from the command line
 chdkptp -c -e"u bin/diskboot.bin"

upload diskboot.bin, reboot camera, enter interactive mode
 chdkptp -c -e"u bin/diskboot.bin" -ereboot -i

download A/CHDK/CCHDK.CFG to BACKUP.CFG in the current directory
 chdkptp -c -e"d CHDK/CCHDK.CFG BACKUP.CFG"

connect to the device with name containing D10 on bus "bus-0", 
 chdkptp -c"D10 -b:bus%-0" -i
note connect -b takes a lua pattern, so % is needed to escapes the -

start chdkptp in interactive mode and connect to the camera
 chdkptp -i -c

execute lua on host PC and print the result
con> !return 1+1
=2

execute lua on the camera, and print the result
con> =return get_buildinfo()
1:return:table:{platformid=12732,platform="d10",version="CHDK",platsub="100a",build_number="0.9.9",os="dryos",build_date="May  3 2011",build_time="20:54:20",}

ad hoc scripting on PC side - download some files
con> !t=con:listdir('A/DCIM/100CANON',{match="%.JPG$"})
con> !for i,n in ipairs(t) do con:download("A/DCIM/100CANON/"..n,"C:/TEMP/"..n) end
note con:downloaddir() is a slightly nicer version of the above

list devices and connect to a specific camera
___> list
 1:Canon PowerShot D10 b=bus-0 d=\\.\libusb0-0001--0x04a9-0x31bc v=0x4a9 p=0x31bc s=12345678123456781234567812345678
 2:Canon PowerShot A540 b=bus-0 d=\\.\libusb0-0002--0x04a9-0x311b v=0x4a9 p=0x311b s=(none)
___> c 540
con> list
 1:Canon PowerShot D10 b=bus-0 d=\\.\libusb0-0001--0x04a9-0x31bc v=0x4a9 p=0x31bc s=12345678123456781234567812345678
*2:Canon PowerShot A540 b=bus-0 d=\\.\libusb0-0002--0x04a9-0x311b v=0x4a9 p=0x311b s=(none)

=Running under linux=
Under linux, the .lua files will not automatically found relative to the executable directory
You can set LUA_PATH on the command line to allow them to be located:
$ LUA_PATH="/path/to/chdkptp/lua/?.lua" /path/to/chdkptp ...

Similarly, if you have built IUP and not installed the libraries to the system lib directory,
you must also set LD_LIBARARY_PATH
$ LD_LIBRARY_PATH=/path/to/iup LUA_PATH="/path/to/chdkptp/lua/?.lua" /path/to/chdkptp -g

This can be done in a shell script, see chdkptp-sample.sh

